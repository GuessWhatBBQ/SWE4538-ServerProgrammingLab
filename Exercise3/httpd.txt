const http = require("http");
const fs = require("fs");
const server = http.createServer(async (req, res) => {
  switch (req.method) {
    case "GET":
      const extension = req.url.split("/").slice(-1)[0].split(".").slice(-1)[0];
      let contentType;
      switch (extension) {
        case "css":
          contentType = "text/css";
          break;
        case "html":
          contentType = "text/html";
          break;
        case "js":
          contentType = "text/javascript";
          break;
        default:
          contentType = "text/html";
          break;
      }
      let content = "";
      fs.readFile(__dirname + "/public" + req.url, (_, data) => {
        try {
          res.writeHead(200, {
            "Content-Type": contentType,
          });
          content = data.toString();
        } catch (e) {
          res.writeHead(404, {
            "Content-Type": contentType,
          });
          content = "Resource not found";
        }
        res.end(content);
      });
      break;
    case "POST":
      const body = await new Promise((resolve) => {
        const _body = [];
        req
          .on("data", (chunk) => {
            _body.push(chunk);
          })
          .on("end", () => {
            resolve(_body);
          });
      });
      const formdata = Object.fromEntries(
        body
          .toString()
          .split("&")
          .map((string) => string.split("="))
      );
      console.log(req.method);
      console.log(req.url);
      console.log(req.headers["content-type"]);
      console.log(formdata);
      res.end();
  }
});

server.listen(8000, console.log("Server started"));
